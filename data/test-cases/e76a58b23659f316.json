{"uid":"e76a58b23659f316","name":"Check YouTube video playback2","fullName":"ftests_youtube.test_play_video#test_youtube_video_playback","historyId":"3eb3b8e6fc8b012156aa17553852050a","time":{"start":1738359481422,"stop":1738359521601,"duration":40179},"description":"Test that a video on YouTube can be played.","descriptionHtml":"<p>Test that a video on YouTube can be played.</p>\n","status":"failed","statusMessage":"AssertionError: Video is not playing!\nassert False","statusTrace":"page = <Page url='https://www.youtube.com/watch?v=dQw4w9WgXcQ'>\n\n    @allure.parent_suite(\"YouTube Tests\")\n    @allure.suite(\"Video Playback\")\n    @allure.title(\"Check YouTube video playback2\")\n    def test_youtube_video_playback(page: Page):\n        \"\"\"Test that a video on YouTube can be played.\"\"\"\n        url = \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n    \n        with allure.step(\"Opening YouTube video page\"):\n            page.goto(url)\n            allure.attach(\n                page.screenshot(), name=\"YouTube Video Page\", attachment_type=allure.attachment_type.PNG\n            )\n    \n        # Шаг 1: Проверка наличия рекламы и её пропуск\n        with allure.step(\"Skipping ad if present\"):\n            try:\n                # Ждем кнопку пропуска рекламы до 31 сек (максимальная длительность рекламы)\n                skip_button = page.wait_for_selector(\".ytp-skip-ad-button\", timeout=31000)\n                skip_button.click()\n                allure.attach(page.screenshot(), name=\"Ad Skipped\", attachment_type=allure.attachment_type.PNG)\n            except Exception:\n                allure.attach(page.screenshot(), name=\"No Ad Found\", attachment_type=allure.attachment_type.PNG)\n    \n        # Шаг 2: Проверка наличия видеоэлемента в DOM (в headless‑режиме он может быть скрыт)\n        with allure.step(\"Checking if video player is present\"):\n            page.wait_for_selector(\"video\", state=\"attached\", timeout=5000)\n    \n        # Шаг 3: Проверка, что видео воспроизводится\n        with allure.step(\"Verifying video playback\"):\n            page.wait_for_timeout(5000)  # Даем время на буферизацию\n            is_playing = page.evaluate(\"document.querySelector('video') && !document.querySelector('video').paused\")\n>           assert is_playing, \"Video is not playing!\"\nE           AssertionError: Video is not playing!\nE           assert False\n\nftests_youtube/test_play_video.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1738359478974,"stop":1738359478974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1738359478974,"stop":1738359478974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1738359478974,"stop":1738359479215,"duration":241},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1738359478974,"stop":1738359478974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1738359478974,"stop":1738359478974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1738359481234,"stop":1738359481421,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Test that a video on YouTube can be played.","status":"failed","statusMessage":"AssertionError: Video is not playing!\nassert False","statusTrace":"page = <Page url='https://www.youtube.com/watch?v=dQw4w9WgXcQ'>\n\n    @allure.parent_suite(\"YouTube Tests\")\n    @allure.suite(\"Video Playback\")\n    @allure.title(\"Check YouTube video playback2\")\n    def test_youtube_video_playback(page: Page):\n        \"\"\"Test that a video on YouTube can be played.\"\"\"\n        url = \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n    \n        with allure.step(\"Opening YouTube video page\"):\n            page.goto(url)\n            allure.attach(\n                page.screenshot(), name=\"YouTube Video Page\", attachment_type=allure.attachment_type.PNG\n            )\n    \n        # Шаг 1: Проверка наличия рекламы и её пропуск\n        with allure.step(\"Skipping ad if present\"):\n            try:\n                # Ждем кнопку пропуска рекламы до 31 сек (максимальная длительность рекламы)\n                skip_button = page.wait_for_selector(\".ytp-skip-ad-button\", timeout=31000)\n                skip_button.click()\n                allure.attach(page.screenshot(), name=\"Ad Skipped\", attachment_type=allure.attachment_type.PNG)\n            except Exception:\n                allure.attach(page.screenshot(), name=\"No Ad Found\", attachment_type=allure.attachment_type.PNG)\n    \n        # Шаг 2: Проверка наличия видеоэлемента в DOM (в headless‑режиме он может быть скрыт)\n        with allure.step(\"Checking if video player is present\"):\n            page.wait_for_selector(\"video\", state=\"attached\", timeout=5000)\n    \n        # Шаг 3: Проверка, что видео воспроизводится\n        with allure.step(\"Verifying video playback\"):\n            page.wait_for_timeout(5000)  # Даем время на буферизацию\n            is_playing = page.evaluate(\"document.querySelector('video') && !document.querySelector('video').paused\")\n>           assert is_playing, \"Video is not playing!\"\nE           AssertionError: Video is not playing!\nE           assert False\n\nftests_youtube/test_play_video.py:46: AssertionError","steps":[{"name":"Opening YouTube video page","time":{"start":1738359481423,"stop":1738359485329,"duration":3906},"status":"passed","steps":[],"attachments":[{"uid":"7df8f65ba49ad53a","name":"YouTube Video Page","source":"7df8f65ba49ad53a.png","type":"image/png","size":312492}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Skipping ad if present","time":{"start":1738359485329,"stop":1738359516529,"duration":31200},"status":"passed","steps":[],"attachments":[{"uid":"700db47cd22090f3","name":"No Ad Found","source":"700db47cd22090f3.png","type":"image/png","size":318470}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Checking if video player is present","time":{"start":1738359516529,"stop":1738359516594,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Verifying video playback","time":{"start":1738359516594,"stop":1738359521600,"duration":5006},"status":"failed","statusMessage":"AssertionError: Video is not playing!\nassert False\n","statusTrace":"  File \"/home/runner/work/auto_tests/auto_tests/ftests_youtube/test_play_video.py\", line 46, in test_youtube_video_playback\n    assert is_playing, \"Video is not playing!\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"page::0","time":{"start":1738359521607,"stop":1738359521637,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1738359527035,"stop":1738359527042,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Video Playback"},{"name":"parentSuite","value":"YouTube Tests"},{"name":"host","value":"fv-az1694-125"},{"name":"thread","value":"3523-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"ftests_youtube.test_play_video"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e76a58b23659f316.json","parameterValues":[]}